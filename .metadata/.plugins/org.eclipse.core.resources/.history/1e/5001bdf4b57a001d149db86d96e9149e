package com.pet.controller;

import java.io.File;

import javax.annotation.Resource;
import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;

import com.pet.model.MemberVO;
import com.pet.model.ProductVO;
import com.pet.model.ReviewVO;
import com.pet.service.ProductService;
import com.pet.service.ReviewService;
import com.pet.util.UploadFileUtils2;

@Controller
public class ReviewController {
	private static final Logger logger = LoggerFactory.getLogger(MemberController.class);

	@Inject
	private ProductService pService;

	@Inject
	private ReviewService rService;

	@Resource(name = "uploadPath")
	private String uploadPath;

	// GET 리뷰 작성하기
	@RequestMapping(value = "/review/review_write", method = RequestMethod.GET)
	public void reviewWriteGET(@RequestParam("pNum") int pNum, Model model) throws Exception {

		String[] rating = { "0", "1", "2", "3", "4", "5" };
		model.addAttribute("rating", rating);

		ProductVO productVO = pService.productView(pNum);
		String pName = productVO.getpName();

		model.addAttribute("pNum", pNum);
		model.addAttribute("pName", pName);
	}

	// POST 리뷰 작성하기
	@RequestMapping(value = "/review/review_write", method = RequestMethod.POST)
	public String reviewWritePOST(HttpServletRequest req, ReviewVO Rvo,
			@RequestParam(value = "fileImg") MultipartFile rImg) throws Exception {

		HttpSession session = req.getSession();
		MemberVO mVO = (MemberVO) session.getAttribute("member");
		String id = mVO.getId();
		Rvo.setID(id);

		String imgUploadPath = uploadPath + File.separator + "review";
		String fileName = null;

		int odNum = Rvo.getOdNum();

		if (rImg.getOriginalFilename() != null && rImg.getOriginalFilename() != "") {
			fileName = UploadFileUtils2.fileUpload(imgUploadPath, rImg.getOriginalFilename(), rImg.getBytes());
			Rvo.setrImg(File.separator + "review" + File.separator + fileName);
		} else {
			fileName = uploadPath + File.separator + "images" + File.separator + "logo_s.png";
			Rvo.setrImg(fileName);
		}

		rService.insertWrite(Rvo);
		rService.modifyResult(odNum);

		return "redirect:/mypage/mypage";
	}

	// GET 리뷰 수정하기
	@RequestMapping(value = "/review/review_update", method = RequestMethod.GET)
	public void reviewUpdateGET(@RequestParam("odNum") int odNum, @RequestParam("pNum") int pNum, Model model) throws Exception {

		String[] rating = { "0", "1", "2", "3", "4", "5" };
		model.addAttribute("rating", rating);

		ProductVO productVO = pService.productView(pNum);
		String pName = productVO.getpName();

		model.addAttribute("pNum", pNum);
		model.addAttribute("pName", pName);
	}
}
